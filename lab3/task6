#! /bin/bash

procDirList=$( ls /proc/ | grep '^[1-9]*$' | sed "s#.*#\/proc\/&\/#" )

i=0

for dir in ${procDirList[*]}
do
   # echo "----${dir}"
    if [ -f ${dir}status ]
    then
        id=$(grep '^Pid.*$' ${dir}status | awk '{print $2}')
        ppid=$(grep '^PPid.*$' ${dir}status| awk '{print $2}')
        ser=$(grep '^se.sum_exec_runtime.*$' ${dir}sched| awk '{print $3}')
        nrsw=$(grep '^nr_switches.*$' ${dir}sched| awk '{print $3}')
        if (( ${nrsw} != 0 ))
        then
            avg=$( awk -v se=${ser} -v nr=${nrsw} 'BEGIN{ print (se / nr) }')
        else 
            avg=-1
        fi
    fi
    #echo ${id}
    #echo ${ppid}
    
    arr[$i]="${id} ${ppid} ${avg}"
    let i=i\+1
done

arr1=$( printf '%s\n' "${arr[@]}"  | sort -nk2)

#printf '%s\n' "${arr1[@]}"; exit 

uPPID=$(printf '%s\n' "${arr1[@]}"  | awk '{print $2}' | uniq)

#printf '%s\n' "${uPPID[@]}"; exit

for cur in ${uPPID[*]}
do
    curPPIDProc=$(printf '%s\n' "${arr1[@]}" | grep -E "^.*?\ ${cur}\ .*$" | sort -nk2)
    res=$( printf '%s\n' "${curPPIDProc[@]}" | awk 'BEGIN{
                                                        val = 0; dv = 0
                                                    }{ 
                                                        val = val + $3
                                                        dv = dv + 1
                                                    }END{
                                                        if(val==$3){
                                                            print -1 
                                                        }
                                                        else{ 
                                                            val = val / dv
                                                            print val
                                                        } 
                                                    }' )
    printf '%s\n' "${curPPIDProc[@]}"
    if [[ ${res} != '-1' ]]
    then
        echo "###Average_Sleeping_Children_of_ParentID=${cur} is ${res}"
    fi
done
